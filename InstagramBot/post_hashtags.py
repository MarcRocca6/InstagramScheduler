import json
import math
import contextlib
from .InstaBot import *

# Post hashtags for post in the comments
def post_hashtags(post_data):

	comment_list = [] # List of all tags to be put in hashtag comment

	hashtag_keywords = str(post_data['hashtag_keywords'])
	hashtag_keywords = hashtag_keywords.split()

	search_hashtags = [] # new hashtags not found in file. Must search for them.
	num_total_tags = post_data['autogenerated_hashtags'] + 5 # total num of tags
	num_single_tags = round(numTags/len(hashtag_list)) # total num of tags for each topic

	if hashtag_keywords == 'nan' or num_total_tags == 5:
		return False

	# Open all avaliable hashtags
	old_hashtag_dict = None
	with open('hashtags.json') as f:
		old_hashtag_dict = json.load(f)
	f.close()

	# Check if old_hashtags has the desired tag
	for tag in hashtags_list:
		if tag in old_hashtag_dict.keys():
			old_tags = old_hashtag_dict[tag][0:num_single_tags]
			num_total_tags = num_total_tags - num_single_tags
			comment_list =  comment_list.extend(old_tags)	
		else:
			search_hashtags = search_hashtags.extend(tag)

	# Search for remaining tags on Instagram 
	# Disable stdout
	with contextlib.redirect_stdout(None):
		bot = InstaBot('Sentry')
		tag_dic = bot.find_hashtags(search_hashtags, num_total_tags)
		keys = list(tag_dic.keys())
		keys = keys.extend(comment_list)
		del bot # kill Sentry instagram class

	# Convert hashtags_list to a comment
	tag_list = []
	for key in keys: 
		dict_tags = list(tag_dic[key].keys())
		tag_list.extend(dict_tags) # extract all tags from dic
	tag_list.extend(customTags) # add custom tags to tag_list
	tag_list = [('#' + x) for x in tag_list] # add hashtags signs
	comment = ' '.join(tag_list) # join tag_list together by spaces 

	return comment 
